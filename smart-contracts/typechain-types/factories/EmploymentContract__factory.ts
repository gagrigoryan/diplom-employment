/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  EmploymentContract,
  EmploymentContractInterface,
} from "../EmploymentContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_employer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_employee",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_agreementHash",
        type: "bytes32",
      },
      {
        internalType: "uint48",
        name: "_startDate",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "_endDate",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "_salaryPerMonth",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "_totalSickDays",
        type: "uint48",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "reciever",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SickLeaveTransaction",
    type: "event",
  },
  {
    inputs: [],
    name: "activateContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "agreementHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "employee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "employer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endDate",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractAgreementHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "head",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isContractActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paySalary",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_index",
        type: "uint8",
      },
    ],
    name: "paySickLeave",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint48",
        name: "_startDate",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "_endDate",
        type: "uint48",
      },
    ],
    name: "requestSickLeave",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "salary",
    outputs: [
      {
        internalType: "uint48",
        name: "salaryPerMonth",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sickLeave",
    outputs: [
      {
        internalType: "uint48",
        name: "totalDays",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "usedDays",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startDate",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "terminateContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234610036576100206100146101a9565b95949094939193610a60565b61002861003b565b6117ac610b2f82396117ac90f35b610041565b60405190565b600080fd5b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b9061007090610046565b810190811060018060401b0382111761008857604052565b610050565b906100a061009961003b565b9283610066565b565b600080fd5b60018060a01b031690565b6100bb906100a7565b90565b6100c7816100b2565b036100ce57565b600080fd5b905051906100e0826100be565b565b90565b6100ee816100e2565b036100f557565b600080fd5b90505190610107826100e5565b565b65ffffffffffff1690565b61011d81610109565b0361012457565b600080fd5b9050519061013682610114565b565b60e0818303126101a45761014f82600083016100d3565b9261015d83602084016100d3565b9261016b81604085016100fa565b926101798260608301610129565b926101a161018a8460808501610129565b936101988160a08601610129565b9360c001610129565b90565b6100a2565b6101c76122db803803806101bc8161008d565b928339810190610138565b90919293949596565b60001b90565b906101e760018060a01b03916101d0565b9181191691161790565b90565b61020861020361020d926100a7565b6101f1565b6100a7565b90565b610219906101f4565b90565b61022590610210565b90565b90565b9061024061023b6102479261021c565b610228565b82546101d6565b9055565b90610258600019916101d0565b9181191691161790565b61026b906100e2565b90565b60001c90565b61027d9061026e565b90565b9061029561029061029c92610262565b610274565b825461024b565b9055565b60a01b90565b906102ba65ffffffffffff60a01b916102a0565b9181191691161790565b6102d86102d36102dd92610109565b6101f1565b610109565b90565b90565b906102f86102f36102ff926102c4565b6102e0565b82546102a6565b9055565b60d01b90565b9061031860ff60d01b91610303565b9181191691161790565b151590565b61033090610322565b90565b90565b9061034b61034661035292610327565b610333565b8254610309565b9055565b606090565b610365604061008d565b90565b9061037290610109565b9052565b52565b634e487b7160e01b600052600060045260246000fd5b6103999051610109565b90565b906103ad65ffffffffffff916101d0565b9181191691161790565b906103cc6103c76103d3926102c4565b6102e0565b825461039c565b9055565b5190565b5490565b90565b634e487b7160e01b600052601160045260246000fd5b61040761040d919392936103df565b926103df565b916104198382026103df565b92818404149015171561042857565b6103e2565b60059060018203010490565b600052602060002090565b1b90565b9190600861046491029161045e60001984610444565b92610444565b9181191691161790565b61048261047d610487926103df565b6101f1565b6103df565b90565b90565b91906104a361049e6104ab9361046e565b61048a565b908354610448565b9055565b600090565b6104c6916104c06104af565b9161048d565b565b5b8181106104d4575050565b806104e260006001936104b4565b016104c9565b1c90565b9061050090600019906020036008026104e8565b8154169055565b919091828210610517575b505050565b600660056105276105509561042d565b6105396105338661042d565b94610439565b938401930193060260008111610558575b506104c8565b388080610512565b61056590600183036104ec565b3861054a565b906801000000000000000081116105945781610589610592936103db565b90828155610507565b565b610050565b5190565b60200190565b919060086105c39102916105bd65ffffffffffff84610444565b92610444565b9181191691161790565b906105d781610599565b9060018060401b0382116106bf576105fb610601916105f6848661056b565b61059d565b92610439565b600582049160005b838110610675575060058302900360008111610626575b50505050565b9260009360005b81811061064257505050015538808080610620565b909194602061066960019261065e6106598a61038f565b6102e0565b9085600602906105a3565b9601910191909161062d565b6000805b600581106106905750906001918185015501610609565b959060206106b66001926106ab6106a68661038f565b6102e0565b908a600602906105a3565b92019601610679565b610050565b906106ce916105cd565b565b906106fd60206001610703946106f5600082016106ef6000880161038f565b906103b7565b0192016103d7565b906106c4565b565b9061070f916106d0565b565b606090565b610720606061008d565b90565b90565b61073a61073561073f92610723565b6101f1565b610109565b90565b52565b60301b90565b906107626bffffffffffff00000000000091610745565b9181191691161790565b9061078161077c610788926102c4565b6102e0565b825461074b565b9055565b5190565b60200190565b5490565b6107a59060036103f8565b90565b600052602060002090565b600260009182808201556107ca83600183016104b4565b0155565b906000036107e1576107df906107b3565b565b610379565b5b8181106107f2575050565b8061080060006003936107ce565b016107e7565b9091828110610815575b505050565b61083361082d61082761083e9561079a565b9261079a565b926107a8565b9182019101906107e6565b388080610810565b9068010000000000000000811161086f578161086461086d93610796565b90828155610806565b565b610050565b5190565b5190565b61088690516103df565b90565b9061089e6108996108a59261046e565b61048a565b825461024b565b9055565b634e487b7160e01b600052602160045260246000fd5b600311156108c957565b6108a9565b906108d8826108bf565b565b6108e490516108ce565b90565b906108f360ff916101d0565b9181191691161790565b610906906108ce565b90565b90565b9061092161091c610928926108fd565b610909565b82546108e7565b9055565b9061098b60606002610991946109516000820161094b6000880161038f565b906103b7565b61096a600082016109646020880161038f565b9061076c565b6109836001820161097d6040880161087c565b90610889565b0192016108da565b9061090c565b565b9061099d9161092c565b565b6109c46109be6109ae84610874565b936109b98585610846565b610790565b916107a8565b6000915b8383106109d55750505050565b60036020826109ee6109e8600195610878565b86610993565b019201920191906109c8565b90610a049161099f565b565b90610a4c60406001610a5294610a2b60008201610a256000880161038f565b906103b7565b610a4460008201610a3e6020880161038f565b9061076c565b01920161078c565b906109fa565b565b90610a5e91610a06565b565b610b2c969593610a9c610aaa94610a95610ae69895610a8e610aa396610a8733600061022b565b600161022b565b600261022b565b6003610280565b60026102e3565b60006102e3565b610ab660016002610336565b610adf610ac1610356565b610ad6610acc61035b565b9360008501610368565b60208301610376565b6004610705565b610b25610af1610711565b610b1c610b136000610b0e610b04610716565b9660008801610368565b610726565b60208501610368565b60408301610742565b6006610a54565b56fe60806040526004361015610013575b610796565b61001e60003561011d565b80630397b652146101185780630ab55d0b146101135780630b97bc861461010e57806322f3e2d4146101095780632fd949ca146101045780636e4c5a5b146100ff5780638f5949f9146100fa5780638f7dcfa3146100f55780638fda356d146100f0578063a0a1a7d7146100eb578063a5708f94146100e6578063ae200e79146100e1578063b2bf849a146100dc578063c24a0f8b146100d7578063cc81a3b3146100d25763dae279d80361000e57610761565b61072b565b61068e565b61064a565b6105c3565b61058a565b610555565b610512565b6104dd565b61042f565b610406565b61038a565b61034f565b6102b6565b61024b565b6101b3565b60e01c90565b60405190565b600080fd5b600080fd5b600091031261013e57565b61012e565b60001c90565b65ffffffffffff1690565b61016061016591610143565b610149565b90565b6101729054610154565b90565b6101826000600401610168565b90565b65ffffffffffff1690565b61019990610185565b9052565b91906101b190600060208501940190610190565b565b346101e3576101c3366004610133565b6101df6101ce610175565b6101d6610123565b9182918261019d565b0390f35b610129565b1c90565b90565b6101ff90600861020493026101e8565b6101ec565b90565b9061021291546101ef565b90565b6102226003600090610207565b90565b90565b61023190610225565b9052565b919061024990600060208501940190610228565b565b3461027b5761025b366004610133565b610277610266610215565b61026e610123565b91829182610235565b0390f35b610129565b61029090600861029593026101e8565b610149565b90565b906102a39154610280565b90565b6102b36002601490610298565b90565b346102e6576102c6366004610133565b6102e26102d16102a6565b6102d9610123565b9182918261019d565b0390f35b610129565b60ff1690565b61030190600861030693026101e8565b6102eb565b90565b9061031491546102f1565b90565b6103246002601a90610309565b90565b151590565b61033590610327565b9052565b919061034d9060006020850194019061032c565b565b3461037f5761035f366004610133565b61037b61036a610317565b610372610123565b91829182610339565b0390f35b610129565b60000190565b346103b85761039a366004610133565b6103a26108fa565b6103aa610123565b806103b481610384565b0390f35b610129565b60ff1690565b6103cc816103bd565b036103d357565b600080fd5b905035906103e5826103c3565b565b90602082820312610401576103fe916000016103d8565b90565b61012e565b6104196104143660046103e7565b610df7565b610421610123565b8061042b81610384565b0390f35b3461045f5761043f366004610133565b61045b61044a610e07565b610452610123565b91829182610339565b0390f35b610129565b60018060a01b031690565b61047f90600861048493026101e8565b610464565b90565b90610492915461046f565b90565b6104a0600080610487565b90565b60018060a01b031690565b6104b7906104a3565b90565b6104c3906104ae565b9052565b91906104db906000602085019401906104ba565b565b3461050d576104ed366004610133565b6105096104f8610495565b610500610123565b918291826104c7565b0390f35b610129565b3461054057610522366004610133565b61052a610ecc565b610532610123565b8061053c81610384565b0390f35b610129565b6105526002600090610487565b90565b3461058557610565366004610133565b610581610570610545565b610578610123565b918291826104c7565b0390f35b610129565b610595366004610133565b61059d611053565b6105a5610123565b806105af81610384565b0390f35b6105c06001600090610487565b90565b346105f3576105d3366004610133565b6105ef6105de6105b3565b6105e6610123565b918291826104c7565b0390f35b610129565b61060181610185565b0361060857565b600080fd5b9050359061061a826105f8565b565b91906040838203126106455780610639610642926000860161060d565b9360200161060d565b90565b61012e565b346106795761066361065d36600461061c565b90611602565b61066b610123565b8061067581610384565b0390f35b610129565b61068b6000601490610298565b90565b346106be5761069e366004610133565b6106ba6106a961067e565b6106b1610123565b9182918261019d565b0390f35b610129565b60301c90565b6106d56106da916106c3565b610149565b90565b6106e790546106c9565b90565b60069061070460006106fd818501610168565b93016106dd565b90565b91602061072992949361072260408201966000830190610190565b0190610190565b565b3461075c5761073b366004610133565b6107436106ea565b9061075861074f610123565b92839283610707565b0390f35b610129565b3461079157610771366004610133565b61078d61077c611760565b610784610123565b91829182610235565b0390f35b610129565b600080fd5b6107a76107ac91610143565b610464565b90565b6107b9905461079b565b90565b60209181520190565b60207f697320616374696f6e0000000000000000000000000000000000000000000000917f4f6e6c792074686520656d706c6f7965722063616e20706572666f726d20746860008201520152565b61082060296040926107bc565b610829816107c5565b0190565b6108439060208101906000818303910152610813565b90565b1561084d57565b610855610123565b62461bcd60e51b81528061086b6004820161082d565b0390fd5b6108943361088e61088861088360016107af565b6104ae565b916104ae565b14610846565b61089c6108ec565b565b60d01b90565b906108b360ff60d01b9161089e565b9181191691161790565b6108c690610327565b90565b90565b906108e16108dc6108e8926108bd565b6108c9565b82546108a4565b9055565b6108f8600060026108cc565b565b61090261086f565b565b6109329061092d3361092761092161091c60016107af565b6104ae565b916104ae565b14610846565b6109df565b565b60d01c90565b61094661094b91610934565b6102eb565b90565b610958905461093a565b90565b60007f436f6e7472616374206973206e6f742061637469766500000000000000000000910152565b61099060166020926107bc565b6109998161095b565b0190565b6109b39060208101906000818303910152610983565b90565b156109bd57565b6109c5610123565b62461bcd60e51b8152806109db6004820161099d565b0390fd5b6109fa906109f56109f0600261094e565b6109b6565b610d13565b565b634e487b7160e01b600052603260045260246000fd5b5490565b600052602060002090565b610a2a81610a12565b821015610a4557610a3c600391610a16565b91020190600090565b6109fc565b90610a5490610185565b9052565b90565b610a67610a6c91610143565b610a58565b90565b610a799054610a5b565b90565b90565b90610a8990610a7c565b9052565b60ff1690565b610a9f610aa491610143565b610a8d565b90565b610ab19054610a93565b90565b634e487b7160e01b600052602160045260246000fd5b60031115610ad457565b610ab4565b90610ae382610aca565b565b90610aef90610ad9565b9052565b601f801991011690565b634e487b7160e01b600052604160045260246000fd5b90610b1d90610af3565b810190811067ffffffffffffffff821117610b3757604052565b610afd565b90610b4f610b48610123565b9283610b13565b565b610b5b6080610b3c565b90565b90610bc7610bbe6002610b6f610b51565b94610b88610b7f60008301610168565b60008801610a4a565b610ba0610b97600083016106dd565b60208801610a4a565b610bb8610baf60018301610a6f565b60408801610a7f565b01610aa7565b60608401610ae5565b565b610bd290610b5e565b90565b610bdf9051610ad9565b90565b60007f5369636b206c656176652077696c6c20626520696e2070656e64696e67000000910152565b610c17601d6020926107bc565b610c2081610be2565b0190565b610c3a9060208101906000818303910152610c0a565b90565b15610c4457565b610c4c610123565b62461bcd60e51b815280610c6260048201610c24565b0390fd5b90565b610c7d610c78610c82926104a3565b610c66565b6104a3565b90565b610c8e90610c69565b90565b610c9a90610c85565b90565b610ca690610c69565b90565b610cb290610c9d565b90565b610cbf9051610a7c565b90565b610cca610123565b3d6000823e3d90fd5b610cdc90610a7c565b9052565b604090610d0a610d119496959396610d00606084019860008501906104ba565b60208301906104ba565b0190610cd3565b565b610d24610d2a916001600601610a21565b50610bc9565b610d52610d3960608301610bd5565b610d4c610d466000610ad9565b91610ad9565b14610c3d565b6000808080610d71610d6c610d6760016107af565b610c91565b610ca9565b610d7d60408701610cb5565b90828215610dee575bf115610de957610d9660016107af565b90610dad6040610da660026107af565b9201610cb5565b91610de47f4777c503c13bce5021c03ce8ad65c9acc5614b088498ccdd4f4abdb5981698ff93610ddb610123565b93849384610ce0565b0390a1565b610cc2565b506108fc610d86565b610e0090610904565b565b600090565b610e0f610e02565b50610e1a600261094e565b90565b610e2690610c9d565b90565b90565b610e40610e3b610e4592610e29565b610c66565b610a7c565b90565b60007f496e73756666696369656e742062616c616e6365000000000000000000000000910152565b610e7d60146020926107bc565b610e8681610e48565b0190565b610ea09060208101906000818303910152610e70565b90565b15610eaa57565b610eb2610123565b62461bcd60e51b815280610ec860048201610e8a565b0390fd5b610ef3610ed830610e1d565b31610eec610ee660c8610e2c565b91610a7c565b1015610ea3565b610eff600160026108cc565b565b610f2633610f20610f1a610f1560016107af565b6104ae565b916104ae565b14610846565b610f2e610f30565b565b610f42610f3d600261094e565b6109b6565b610f4a610fec565b565b610f60610f5b610f6592610185565b610c66565b610a7c565b90565b60007f496e636f72726563742073616c61727920616d6f756e74000000000000000000910152565b610f9d60176020926107bc565b610fa681610f68565b0190565b610fc09060208101906000818303910152610f90565b90565b15610fca57565b610fd2610123565b62461bcd60e51b815280610fe860048201610faa565b0390fd5b6110143461100e6110086110036000600401610168565b610f4c565b91610a7c565b14610fc3565b600080808061103361102e61102960026107af565b610c91565b610ca9565b349082821561104a575bf11561104557565b610cc2565b506108fc61103d565b61105b610f01565b565b634e487b7160e01b600052601160045260246000fd5b61107f61108591610185565b91610185565b90039065ffffffffffff821161109757565b61105d565b90565b6110b36110ae6110b89261109c565b610c66565b610185565b90565b634e487b7160e01b600052601260045260246000fd5b6110dd6110e391610185565b91610185565b9081156110ee570490565b6110bb565b60207f636b206c65617665000000000000000000000000000000000000000000000000917f4f6e6c792074686520656d706c6f7965652063616e207265717565737420736960008201520152565b61114e60286040926107bc565b611157816110f3565b0190565b6111719060208101906000818303910152611141565b90565b1561117b57565b611183610123565b62461bcd60e51b8152806111996004820161115b565b0390fd5b60007f5374617274446174652073686f756c6420626520696e20666561747572650000910152565b6111d2601e6020926107bc565b6111db8161119d565b0190565b6111f590602081019060008183039101526111c5565b90565b156111ff57565b611207610123565b62461bcd60e51b81528061121d600482016111df565b0390fd5b60207f7461727444617465000000000000000000000000000000000000000000000000917f456e64446174652073686f756c642062652067726561746572207468616e205360008201520152565b61127c60286040926107bc565b61128581611221565b0190565b61129f906020810190600081830391015261126f565b90565b156112a957565b6112b1610123565b62461bcd60e51b8152806112c760048201611289565b0390fd5b60007f457863656564696e67207369636b206c65617665206461797300000000000000910152565b61130060196020926107bc565b611309816112cb565b0190565b61132390602081019060008183039101526112f3565b90565b1561132d57565b611335610123565b62461bcd60e51b81528061134b6004820161130d565b0390fd5b90565b61136661136161136b9261134f565b610c66565b610a7c565b90565b61137d61138391939293610a7c565b92610a7c565b9161138f838202610a7c565b92818404149015171561139e57565b61105d565b6113ad6080610b3c565b90565b90565b600052602060002090565b5490565b6113cb816113be565b8210156113e6576113dd6003916113b3565b91020190600090565b6109fc565b634e487b7160e01b600052600060045260246000fd5b61140b9051610185565b90565b60001b90565b9061142565ffffffffffff9161140e565b9181191691161790565b61144361143e61144892610185565b610c66565b610185565b90565b90565b9061146361145e61146a9261142f565b61144b565b8254611414565b9055565b60301b90565b9061148b6bffffffffffff0000000000009161146e565b9181191691161790565b906114aa6114a56114b19261142f565b61144b565b8254611474565b9055565b906114c26000199161140e565b9181191691161790565b6114e06114db6114e592610a7c565b610c66565b610a7c565b90565b90565b906115006114fb611507926114cc565b6114e8565b82546114b5565b9055565b9061151760ff9161140e565b9181191691161790565b61152a90610ad9565b90565b90565b9061154561154061154c92611521565b61152d565b825461150b565b9055565b906115af606060026115b5946115756000820161156f60008801611401565b9061144e565b61158e6000820161158860208801611401565b90611495565b6115a7600182016115a160408801610cb5565b906114eb565b019201610bd5565b90611530565b565b91906115c8576115c691611550565b565b6113eb565b90815491680100000000000000008310156115fd57826115f59160016115fb950181556113c2565b906115b7565b565b610afd565b906117266117389261171d6116f0611638611633611621878690611073565b61162d6201518061109f565b906110d1565b610f4c565b926116df61166761166261164f6000600601610168565b61165c60006006016106dd565b90611073565b610f4c565b61168c3361168661168061167b60026107af565b6104ae565b916104ae565b14611174565b6116a9426116a261169c86610f4c565b91610a7c565b11156111f8565b6116c5886116bf6116b986610185565b91610185565b116112a2565b6116d86116d28792610a7c565b91610a7c565b1115611326565b94926116eb6001611352565b61136e565b61171460009361170b6117016113a3565b9760008901610a4a565b60208701610a4a565b60408501610a7f565b60608301610ae5565b61173360016006016113b0565b6115cd565b565b600090565b61174b61175091610143565b6101ec565b90565b61175d905461173f565b90565b61176861173a565b506117736003611753565b9056fea2646970667358221220316a89e6d643c57611ba1d69782bf8be547a370c8aa088e60942df0da36d485964736f6c634300081c0033";

type EmploymentContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EmploymentContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EmploymentContract__factory extends ContractFactory {
  constructor(...args: EmploymentContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _employer: AddressLike,
    _employee: AddressLike,
    _agreementHash: BytesLike,
    _startDate: BigNumberish,
    _endDate: BigNumberish,
    _salaryPerMonth: BigNumberish,
    _totalSickDays: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _employer,
      _employee,
      _agreementHash,
      _startDate,
      _endDate,
      _salaryPerMonth,
      _totalSickDays,
      overrides || {}
    );
  }
  override deploy(
    _employer: AddressLike,
    _employee: AddressLike,
    _agreementHash: BytesLike,
    _startDate: BigNumberish,
    _endDate: BigNumberish,
    _salaryPerMonth: BigNumberish,
    _totalSickDays: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _employer,
      _employee,
      _agreementHash,
      _startDate,
      _endDate,
      _salaryPerMonth,
      _totalSickDays,
      overrides || {}
    ) as Promise<
      EmploymentContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EmploymentContract__factory {
    return super.connect(runner) as EmploymentContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EmploymentContractInterface {
    return new Interface(_abi) as EmploymentContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EmploymentContract {
    return new Contract(address, _abi, runner) as unknown as EmploymentContract;
  }
}
